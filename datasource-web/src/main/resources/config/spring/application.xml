<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:cache="http://www.springframework.org/schema/cache" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
            http://www.springframework.org/schema/beans 
            http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
            http://www.springframework.org/schema/context 
            http://www.springframework.org/schema/context/spring-context-3.0.xsd
            http://www.springframework.org/schema/cache 
            http://www.springframework.org/schema/cache/spring-cache-3.2.xsd 
            http://www.springframework.org/schema/mvc
            http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd
            http://www.springframework.org/schema/tx
    		http://www.springframework.org/schema/tx/spring-tx-3.2.xsd">

	<context:component-scan base-package="com.bingzhilanmo" />
	<mvc:annotation-driven />


	<!-- 如果您使用的Spring3.1开始的版本，建议使用RequestMappingHandlerMapping和RequestMappingHandlerAdapter。 -->
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping" />
	<bean
		class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
		<property name="messageConverters">
			<list>
				<ref bean="byteArray_hmc" />
				<ref bean="string_hmc" />
				<ref bean="resource_hmc" />
				<ref bean="source_hmc" />
				<ref bean="xmlAwareForm_hmc" />
				<ref bean="jaxb2RootElement_hmc" />
				<ref bean="mappingJackson_hmc" />
			</list>
		</property>
	</bean>

	<bean id="mappingJackson_hmc"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html;charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="string_hmc"
		class="org.springframework.http.converter.StringHttpMessageConverter">
		<property name="supportedMediaTypes">
			<list>
				<value>text/html; charset=UTF-8</value>
				<value>application/json;charset=UTF-8</value>
			</list>
		</property>
	</bean>
	<bean id="byteArray_hmc"
		class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
	<bean id="resource_hmc"
		class="org.springframework.http.converter.ResourceHttpMessageConverter" />
	<bean id="source_hmc"
		class="org.springframework.http.converter.xml.SourceHttpMessageConverter" />
	<bean id="xmlAwareForm_hmc"
		class="org.springframework.http.converter.xml.XmlAwareFormHttpMessageConverter" />
	<bean id="jaxb2RootElement_hmc"
		class="org.springframework.http.converter.xml.Jaxb2RootElementHttpMessageConverter" />


    <!-- 配置JSP视图 -->
     <bean id="internalResourceViewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
       <property name="viewClass" value="org.springframework.web.servlet.view.JstlView"/>
        <property name="prefix" value="/template/"/>
        <property name="suffix" value=".jsp"/>      
     </bean>

	<!-- 文件上传配置注意:这里申明的id必须为multipartResolver -->
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="5000000" />
	</bean>

   

	<bean id="resourceBundleMessageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource" />

    <!-- 动态数据源切换AOP代理类 -->
	<bean id="dynamicMethodInterceptor" class="com.bingzhilanmo.base.datasource.DynamicMethodInterceptor" />
	
	<!-- 动态切数据源的配置 -->
	<bean
		class="org.springframework.aop.framework.autoproxy.BeanNameAutoProxyCreator">
		<property name="beanNames" value="*Service*" />
		<property name="interceptorNames">
			<list>
				<value>dynamicMethodInterceptor</value>
			</list>
		</property>
	</bean>
	<!-- 当在web.xml 中 DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，能映射静态资源 -->
	<mvc:default-servlet-handler />
	<!-- 静态资源映射 -->
	 <mvc:resources mapping="/template/assets/**" location="/template/assets/" />
	<!-- 进行登录拦截 [ -->
	
	<!-- 错误处理 -->
	<bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">/error/upload_error</prop>
                <prop key="com.sicent.operate.web.interceptor.SessionTimeoutException">redirect:/jumppage/login-null</prop>
            </props>
        </property>
    </bean>
	
	
	<!-- 拦截器配置 -->
	<!-- <mvc:interceptors>
		超时登录
		<mvc:interceptor>
			<mvc:mapping path="/**" />
			<bean
				class="com.sicent.operate.web.interceptor.SessionTimeoutInterceptor">
				<property name="allowUrls">
					<list>
						如果请求中包含以下路径，则不进行拦截 
						<value>/admin/user/login</value>
						<value>/template/assets</value>
						<value>/jumppage/login</value>
						<value>/jumppage/login-null</value>
					</list>
				</property>
			</bean>
		</mvc:interceptor>
	</mvc:interceptors> -->
</beans>